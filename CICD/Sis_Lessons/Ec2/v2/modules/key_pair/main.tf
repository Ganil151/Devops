# This block generates a private key using the `tls_private_key` resource.
# The private key will be used to create an AWS key pair for SSH access to EC2 instances.

resource "tls_private_key" "rsa_4096" {
  # The `algorithm` attribute specifies the encryption algorithm to use for generating the private key.
  # In this case, the algorithm is set to "RSA".
  algorithm = "RSA"

  # The `rsa_bits` attribute specifies the size of the RSA key in bits.
  # A value of 4096 ensures strong encryption (commonly used for secure SSH connections).
  rsa_bits = 4096
}

# This block creates an AWS key pair using the `aws_key_pair` resource.
# The key pair allows SSH access to EC2 instances by associating the public key with the instance.

resource "aws_key_pair" "key_pair" {
  # The `key_name` attribute specifies the name of the key pair in AWS.
  # The value is passed as an input variable (`var.key_name`) when the module is called.
  key_name = var.key_name

  # The `public_key` attribute specifies the public key to associate with the key pair.
  # The public key is derived from the `tls_private_key.rsa_4096` resource in OpenSSH format.
  public_key = tls_private_key.rsa_4096.public_key_openssh
}

# This block saves the private key to a local file using the `local_file` resource.
# The private key is required to authenticate SSH connections to the EC2 instance.

resource "local_file" "private_key" {
  # The `content` attribute specifies the content of the file.
  # Here, it contains the private key in PEM format, generated by the `tls_private_key.rsa_4096` resource.
  content = tls_private_key.rsa_4096.private_key_pem

  # The `filename` attribute specifies the name of the file where the private key will be saved.
  # The filename is dynamically generated using the `var.key_name` variable and appends the `.pem` extension.
  filename = "${var.key_name}.pem"

  # The `file_permission` attribute specifies the file permissions for the private key file.
  # A value of "0400" ensures that only the owner can read the file (secure permissions for sensitive data).
  file_permission = "0400"
}


















# resource "tls_private_key" "rsa_4096" {
#   algorithm = "RSA"
#   rsa_bits  = 4096
# }

# resource "aws_key_pair" "key_pair" {
#   key_name   = var.key_name
#   public_key = tls_private_key.rsa_4096.public_key_openssh
# }

# resource "local_file" "private_key" {
#   content         = tls_private_key.rsa_4096.private_key_pem
#   filename        = "${var.key_name}.pem"
#   file_permission = "0400"
# }
